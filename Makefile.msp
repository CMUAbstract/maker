# Maximum timer value (platform-specific var for generic functions in .pre)
TIMER_MAX = (2^16 - 1)

# Generate macros for setting timer divider from spec, e.g '8*4',
# where the second divider ('*4') is optional.
define msp_timer_div
-DDIV_$(1)=$(word 1,$(subst *, ,$(2))) \
-DDIVEX_$(1)=$(or $(word 2,$(subst *, ,$(2))),1)
endef

# Convert UART baudrate to register settings (identifer, baudrate, freq)
define uart_baudrate
-D$(1)_BR=$(call calc_int,$(3) / $(2)) \
-D$(1)_BRS=$(call uart_brs,$(3) / $(2))
endef

# Modulation pattern for UART
ifneq ($(filter cc430%,$(DEVICE)),)

define uart_brs
$(call calc_int,(($(1)) - $(call calc_int,$(1))) * 8)
endef

else # ! cc430%

ifneq ($(filter msp430fr%,$(DEVICE)),) # mspfr{58,59,68,69} to be exact...

# User guide Table 21-4
BRS_FRAC = \
0.0000 0.0529 0.0715 0.0835 0.1001 0.1252 0.1430 0.1670 0.2147 0.2224 \
0.2503 0.3000 0.3335 0.3575 0.3753 0.4003 0.4286 0.4378 0.5002 0.5715 \
0.6003 0.6254 0.6432 0.6667 0.7001 0.7147 0.7503 0.7861 0.8004 0.0833 \
0.8464 0.8572 0.8751 0.9004 0.9170 0.9288

BRS_REG = \
0x00   0x01   0x02   0x04   0x08   0x10   0x20   0x11   0x21   0x22 \
0x44   0x25   0x49   0x4A   0x52   0x92   0x53   0x55   0xAA   0x6B \
0xAD   0xB5   0xB6   0xD6   0xB7   0xBB   0xDD   0xED   0xEE   0xBF \
0xDF   0xEF   0xF7   0xFB   0xFD   0xFE

# (frac, idx, keys)
define find_sorted
$(if $(call calc_test,$(1) <= $(firstword $(3))),$(2),\
	 $(call find_sorted,$(1),$(call calc_int,$(2) + 1),$(wordlist 2,$(words $(3)))))
endef

define uart_brs
$(word $(call find_sorted,$(1) - $(call calc_int,$(1)),1,$(BRS_FRAC)),$(BRS_REG))
endef

endif # msp430fr%
endif # ! cc430%
