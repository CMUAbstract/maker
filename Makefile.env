# These are default paths to toolchains, to override them, either export
# environment variables from the shell, or put them in Makefile.env in the root
# folder of individual app (and do not add to version controll, since it's
# system-specific), or create ~/.config/maker/Makefile.env and specify paths
# there, to affect all builds.

# Installation directory of TI software (for convenience, used only in this file)
export TI_ROOT ?= /opt/ti

# TI MSP GCC toolchain
export MSPGCC_ROOT ?= $(TI_ROOT)/mspgcc

# LLVM/clang toolchain
export LLVM_ROOT ?=
# export LLVM_ROOT ?= /media/sf_microvm/llvm6-install/
export CLANG_ROOT ?= $(LLVM_ROOT)

# TI toolchain (these paths are determined by CCS and the compiler version)
export CCS_ROOT ?= $(TI_ROOT)/ccsv6
export CG_TOOL_ROOT ?= $(CCS_ROOT)/tools/compiler/ti-cgt-msp430_4.4.3
export PLATFORM_ROOT ?= $(CCS_ROOT)/ccs_base/msp430

# TI tool for flashing executables generated by the TI toolchain
export FLASHER_ROOT ?= $(TI_ROOT)/MSP430Flasher_1.3.3

# FET I/O library for mspdebug
#   Option A: on Arch Linux, there's an mspds package in AUR that installs
#   the library into the system path, leaving no need to set a path here.
#
#   Option B: build the library manually from the MSP Debug Stack
#   distribution: http://www.ti.com/tool/MSPDS. This requires a patch:
#   http://www.dlbeer.co.nz/mspdebug/tilib.html
#LIBMSP430_ROOT = $(TI_ROOT)/MSPDebugStack_OS_Package
#
#   Option C (32-bit only): the library shipped with TI MSG GCC toolchain
#LIBMSP430_ROOT = $(MSPGCC_ROOT)/bin

# The above defaults may be overriden by the system, or by the application,
# neither of which would not be version controlled (latter in .gitignore).
-include ~/.config/maker/Makefile.env
-include Makefile.env
