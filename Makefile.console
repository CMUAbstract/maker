CONFIG_EDB ?= 0

# by default, there's no console
CONFIG_PRINTF_LIB ?=

# by default, PRINTF maps to libedb's EIF_PRINTF
CONFIG_LIBEDB_PRINTF ?= eif

VERBOSE ?= 0

# All output channels use the same printf implementation, what differs is the
# backend used by the printf implementation.

ifeq ($(CONFIG_PRINTF_LIB),libedb)
DEPS += libmspprintf
CFLAGS += -DCONFIG_LIBEDB_PRINTF

ifeq ($(CONFIG_LIBEDB_PRINTF),eif)
CFLAGS += -DCONFIG_LIBEDB_PRINTF_EIF
else ifeq ($(CONFIG_LIBEDB_PRINTF),bare)
CFLAGS += -DCONFIG_LIBEDB_PRINTF_BARE
endif # CONFIG_LIBEDB_PRINTF

# We don't include libedb dependency here but let the app makefile include it,
# because libedb might be used without the console, and in that case we would
# add it twice, which maker can't tolerate.
# DEPS += libedb libwispbase

else ifeq ($(CONFIG_PRINTF_LIB),libmspconsole)
DEPS += libmspprintf
CFLAGS += -DCONFIG_LIBMSPCONSOLE_PRINTF
DEPS += libmspconsole

# By same reasoning as above, we don't include libwispbase as a dep here
# DEPS += libwispbase

else ifeq ($(CONFIG_PRINTF_LIB),libmspsoftuart)
DEPS += libmspprintf
CFLAGS += -DCONFIG_LIBMSPSOFTUART_PRINTF
DEPS += libmspsoftuart

else ifeq ($(CONFIG_PRINTF_LIB),)
# no console: nothing to do

else # CONFIG_PRINTF_LIB_*
$(error Unknown CONFIG_PRINTF_LIB value)
endif # CONFIG_PRINTF_LIB_*

CFLAGS += -DVERBOSE=$(VERBOSE)

CFLAGS += -I$(LIBIO_ROOT)/src/include
LFLAGS += -L$(LIBMSPPRINTF_ROOT)/bld/gcc
